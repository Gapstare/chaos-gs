OBJECTS = %w(
  cluster.o
  cpuid.o
  debug.o
  dispatch.o
  dma.o
  elf.o
  gdt.o
  idt.o
  init.o
  irq.o
  irq_handlers.o
  limits.o
  main.o
  memory.o
  memory_global.o
  memory_physical.o
  memory_virtual.o
  multiboot.o
  mutex.o
  port.o
  process.o
  string.o
  system_calls-auto.o
  system_calls.o
  thread.o
  time.o
  timer.o
  trap.o
  wrapper.o
  compiler_rt/udivdi3.o
  compiler_rt/umoddi3.o
)

OUTPUT = 'libstorm_ia32.a'
KERNEL_OUTPUT = 'storm'
LDFLAGS = '-nostdlib -Wl,-T,kernel.ld -m32'

task :default => [ :banner, :storm ] + OBJECTS

task :banner do
  print "Compiling ".bold
  print "storm/ia32".cyan.bold
  puts "..."

  print "    "
end

task :install => [ :default ] do
  sh "install #{KERNEL_OUTPUT} #{INSTALL_ROOT}"
  puts "    Installed #{KERNEL_OUTPUT} in #{INSTALL_ROOT}".gray
end

file KERNEL_OUTPUT => [ OUTPUT ] do |t|
  begin
    puts '    Linking...'.blue.bold

    # It's crazy, but we actually have to specify the OUTPUT twice here (since ia32 has references to the generic lib and
    # the generic lib has references to ia32... We could try to get rid of that eventually.)
    command = "#{CC} -o #{t.name} #{OUTPUT} ../generic/#{STORM_GENERIC_LIB} #{OUTPUT} #{LDFLAGS}"
    sh command
  rescue
    puts "Error linking kernel. Full command line was: #{command}"
    raise
  end
end

load '../storm.rake'
